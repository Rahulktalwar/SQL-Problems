

-- Problem 2: Latest Order Summary per Customer

-- Problem Statement: Write an SQL query to fetch the customer name, their latest order date and total value of the order. If a customer made multiple orders on the latest order date then fetch total value for all the orders in that day. If a customer has not done an order yet, display the “9999-01-01” as latest order date and 0 as the total order value.


DROP TABLE IF EXISTS customers;
CREATE TABLE customers 
(
    id     INT,
    name   VARCHAR(50)
);
INSERT INTO customers VALUES
(101, 'David'),
(102, 'Robin'),
(103, 'Carol'),
(104, 'Ali');

DROP TABLE IF EXISTS orders;
CREATE TABLE orders 
(
    id              INT,
    customer_id     INT,
    total_cost      DECIMAL,
    order_date      DATE
);
INSERT INTO orders VALUES
(1, 101, 100, '2025-04-15'),
(2, 102, 40, '2025-04-20'),
(3, 101, 80, '2025-03-12'),
(4, 101, 120, '2025-03-12'),
(5, 103, 60, '2025-04-20'),
(6, 103, 50, '2025-04-20');

SELECT * FROM customers;
SELECT * FROM orders;

EXPECTED OUTPUT:
+---------------+-----------------+-------------+
| CUSTOMER      | LAST_ORDER_DATE | TOTAL_VALUE |
+---------------+-----------------+-------------+
| David         | 2025-04-15      | 100         |
| Robin         | 2025-04-20      | 40          |
| Carol         | 2025-04-20      | 110         |
| Ali           | 9999-01-01      | 0           |
+---------------+-----------------+-------------+



Sol for Problem no : 2

with cte as (
select name, total_cost, order_date,
dense_rank() over(partition by name order by order_date desc) as last_order_date
from customers c
left join orders o on o.customer_id=c.id
)

select name,coalesce(order_date,'9999-01-01') as LAST_ORDER_DATE, sum(coalesce(total_cost,0)) as TOTAL_VALUE
from cte
where last_order_date=1
group by 1,2 ;
